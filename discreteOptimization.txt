Model => Domain, Constraints => Propagation
(Prune => Search => Constrains Store)
A) Constraint Programming
* Branch and Prune
* Search, Constraint Store, Domain Store.
* Linear Constraint:
a(1)x(1) + …. a(n)x(n) >= b(1)y(1) + …. + b(m)y(m)
r = b(1)min(y(1)) + b(2)min(y(2)) + …..
l = a(1)max(a(1)) + a(2)max(a(2))+ …..
a(i)x(i) >= r - l + a(i)max(x(i))
b(i)y(i) <= l - r + b(i)min(y(i))

* Rectification: Constrainst: 0 or 1

* Global Constraint:
Example: alldiferent(x1,...,xn)
Why? Feasibility testing & pruning
Forward Phase, Backward Phase

* Symmetry breaking: imposing order
* Redundant constraints: 
not exclude any solution but reduce the search space
Properties of solutions, not captured by the model
Surrogate constraints
Dual modeling

Alldiffirent => bipartite graph (maximum matching)
=> start with any matching 
=> improve (alternating paths) => Prune (Basic property - Berge, 1970)

* Search
First-fail principle
Euler Knight
* Nondeterministic computations: 
1) variable/value labeling: 
- variable: smallest domain, most constrained
- value: leave many options
ESDD Deployment => Generalized quadratic assignment problem

2) Using object funtion to drive the search

3) value/variable labeling:
The perfect square

4) Domain splitting
The magic number square => weak commiment with domains

5) Symmetry breaking
6) Randomization and restarts
